{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","utils/formatDate.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_REPOS","NO_REPOS","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","localStorage","setItem","loadUser","a","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","alerts","alert","map","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","length","ProfileTop","rel","Object","entries","filter","key","ProfileAbout","trim","split","formatDate","date","Intl","DateTimeFormat","Date","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","class","PostItem","addLike","removeLike","deletePost","text","likes","comments","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","Component","component","rest","render","props","initialState","alertReducer","action","getItem","postReducer","combineReducers","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94d081ee.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id,\r\n      }),\r\n    timeout\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code' /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n  //Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","export default __webpack_public_path__ + \"static/media/spinner.a57bb540.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  CLEAR_PROFILE,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NO_REPOS,\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const res = await axios.post('api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put('/api/profile/experience', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put('/api/profile/education', formData);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n    try {\r\n      await axios.delete('/api/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus' /> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={onChange}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(CreateProfile);\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.social ? '' : profile.social.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={onSubmit}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={onChange}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={onChange}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  EditProfile\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={onChange} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    description,\r\n    current,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={onChange} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => setFormData({ ...formData, current: !current })}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company ? <span> at {company}</span> : null}\r\n      </p>\r\n      <p>{location ? <span>{location}</span> : null}</p>\r\n      <div className='icons my-1'>\r\n        {website ? (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x' />\r\n          </a>\r\n        ) : null}\r\n        {social\r\n          ? Object.entries(social)\r\n              .filter(([_, value]) => value)\r\n              .map(([key, value]) => (\r\n                <a\r\n                  key={key}\r\n                  href={value}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  <i className={`fab fa-${key} fa-2x`}></i>\r\n                </a>\r\n              ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line' />\r\n      </Fragment>\r\n    )}\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","function formatDate(date) {\r\n  return new Intl.DateTimeFormat().format(new Date(date));\r\n}\r\n\r\nexport default formatDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport formatDate from '../../utils/formatDate';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos.map((repo) => (\r\n        <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n          <div>\r\n            <h4>\r\n              <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                {repo.name}\r\n              </a>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div>\r\n            <ul>\r\n              <li className='badge badge-primary'>\r\n                Stars: {repo.stargazers_count}\r\n              </li>\r\n              <li className='badge badge-dark'>\r\n                Watchers: {repo.watchers_count}\r\n              </li>\r\n              <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div class='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>Posted on {formatDate(date)}</p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up' />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/posts', formData);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData);\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment the post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport formatDate from '../../utils/formatDate';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>Posted on {formatDate(date)}</p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times' />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default alertReducer;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_REPOS,\r\n  NO_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case NO_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nfunction postReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}